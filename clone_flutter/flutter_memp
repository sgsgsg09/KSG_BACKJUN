플러터(Flutter)에서 위젯은 화면을 구성하는 기본 빌딩 블록입니다. 위젯은 텍스트, 이미지, 버튼, 레이아웃 등 다양한 UI 요소를 나타냅니다. 플러터의 위젯은 StatelessWidget과 StatefulWidget 두 가지 주요 카테고리로 나뉩니다.

### StatelessWidget:
상태가 없는 위젯, 한 번 생성되면 내부의 상태가 변경되지 않는 위젯.
불벼이다.
불변성(Immutable):
    StatelessWidget은 한 번 생성되면 그 상태가 변경되지 않습니다.

build 메서드:
    모든 StatelessWidget은 반드시 build 메서드를 구현해야 합니다. build 메서드는 위젯을 실제로 생성하고 화면에 표시하는 역할을 합니다.

1. **Text:**
   - 단일 행 텍스트를 표시하는 데 사용됩니다.
   ```dart
   Text('Hello, Flutter!');
   ```

2. **Image:**
   - 이미지를 표시하는 데 사용됩니다.
   ```dart
   Image.network('https://example.com/image.jpg');
   ```

3. **Icon:**
   - 아이콘을 표시하는 데 사용됩니다.
   ```dart
   Icon(Icons.star);
   ```

4. **Container:**
   - 다양한 속성을 갖는 박스를 생성하는 데 사용됩니다.
   ```dart
   Container(
     width: 100.0,
     height: 100.0,
     color: Colors.blue,
   );
   ```

5. **Row, Column:**
   - 가로 또는 세로로 여러 위젯을 나란히 배치할 때 사용됩니다.
   ```dart
   Row(
     children: [
       Text('Item 1'),
       Text('Item 2'),
     ],
   );
   ```

### StatefulWidget:
    UI가 변경되지 않는 정적인 부분을 정의할 때 사용함.
Stateful Widget (상태를 가지는 위젯): 이 부분은 UI를 그리는 역할을 합니다. 하지만 이 UI 자체는 불변(immutable)하며 상태의 변화에 대한 업데이트를 처리하지 않습니다.

State (상태): 이 부분은 위젯의 상태를 나타냅니다. 상태는 위젯이 변할 수 있는 데이터를 포함하며, 데이터가 변경될 때마다 Flutter 프레임워크는 화면을 다시 그리도록 트리거됩니다.

1. **ListView:**
   - 스크롤 가능한 목록을 생성하는 데 사용됩니다.
   ```dart
   ListView(
     children: [
       ListTile(title: Text('Item 1')),
       ListTile(title: Text('Item 2')),
     ],
   );
   ```

2. **GridView:**
   - 그리드 형태의 목록을 생성하는 데 사용됩니다.
   ```dart
   GridView.count(
     crossAxisCount: 2,
     children: [
       Text('Item 1'),
       Text('Item 2'),
     ],
   );
   ```

3. **Card:**
   - 소재 디자인을 구현하는 데 사용되는 카드 형태의 위젯입니다.
   ```dart
   Card(
     child: ListTile(
       title: Text('Card Title'),
       subtitle: Text('Card Subtitle'),
     ),
   );
   ```

4. **AppBar:**
   - 앱의 상단 바를 생성하는 데 사용됩니다.
   ```dart
   AppBar(
     title: Text('My App'),
   );
   ```

5. **Form:**
   - 사용자 입력을 수집하고 검증하는 데 사용됩니다.
   ```dart
   Form(
     child: TextFormField(
       decoration: InputDecoration(labelText: 'Username'),
       validator: (value) {
         if (value.isEmpty) {
           return 'Please enter your username.';
         }
         return null;
       },
     ),
   );
   ```
